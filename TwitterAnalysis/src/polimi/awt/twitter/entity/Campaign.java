package polimi.awt.twitter.entity;

// default package
// Generated Jun 10, 2013 6:37:02 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Campaign generated by hbm2java
 */
@Entity
@Table(name = "Campaign", catalog = "DBawtTwitter")
public class Campaign implements java.io.Serializable {

	private Integer idCampaign;
	private User user;
	private String name;
	private Set<User> users = new HashSet<User>(0);
	private Set<Que> ques = new HashSet<Que>(0);

	public Campaign() {
	}

	public Campaign(User user, String name) {
		this.user = user;
		this.name = name;
	}

	public Campaign(User user, String name, Set<User> users, Set<Que> ques) {
		this.user = user;
		this.name = name;
		this.users = users;
		this.ques = ques;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idCampaign", unique = true, nullable = false)
	public Integer getIdCampaign() {
		return this.idCampaign;
	}

	public void setIdCampaign(Integer idCampaign) {
		this.idCampaign = idCampaign;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idUser", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "Name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "CampaignEmployee", catalog = "DBawtTwitter", uniqueConstraints = @UniqueConstraint(columnNames = "CampaignID"), joinColumns = { @JoinColumn(name = "CampaignID", unique = true, nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "EmployerID", nullable = false, updatable = false) })
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "campaign")
	public Set<Que> getQues() {
		return this.ques;
	}

	public void setQues(Set<Que> ques) {
		this.ques = ques;
	}

}
